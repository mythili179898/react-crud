{"ast":null,"code":"var _jsxFileName = \"/home/hmspl/Desktop/Front-end-learning/React/react-crud-git/Auth_with_crud/src/Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = props => {\n  _s();\n  const [responseVal, loginResponse] = useState(\"\");\n  const navigate = useNavigate();\n  // const location = useLocation();\n  useEffect(() => {\n    // this is for redirect the login page if the user is not valid \n    let username = sessionStorage.getItem('username');\n    if (username === null || username === '') {\n      navigate('/login');\n    }\n    ;\n    getUserList();\n  }, []);\n  const getUserList = () => {\n    fetch(\"http://localhost:3000/user\").then(res => {\n      // here we need to call post method by sending username and also call get method \n      return res.json();\n    }).then(resp => {\n      console.log(resp);\n      loginResponse(resp);\n      console.log(\"loginResponse\", responseVal);\n      // if (Object.keys(resp).length === 0) {\n      //     toast.warn(\"Please enter valid user\")\n      // }\n      // else {\n      //     if (resp.password === password) { // the second password from usestate\n      //         toast.success(\"Success\")\n      //         sessionStorage.setItem(\"username\", username)\n      //         navigate('/', { state: { loginResponse } })\n      //     } else {\n      //         toast.error(\"Please enter valid credentials\")\n      //     }\n      // }\n    }).catch(err => {\n      toast.error(err.message);\n    });\n  };\n  // const loginResponse = location.state && location.state.loginResponse;\n  // console.log(loginResponse, \"login_resssssss\")\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/',\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/login',\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Table-Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"9B8y7bIFA/Ya+LkP4BRwxCiq9kI=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","Link","useNavigate","toast","data","jsxDEV","_jsxDEV","Home","props","_s","responseVal","loginResponse","navigate","username","sessionStorage","getItem","getUserList","fetch","then","res","json","resp","console","log","catch","err","error","message","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hmspl/Desktop/Front-end-learning/React/react-crud-git/Auth_with_crud/src/Home.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport data from './data.json'\nconst Home = (props) => {\n    const [responseVal, loginResponse] = useState(\"\")\n    const navigate = useNavigate();\n    // const location = useLocation();\n    useEffect(() => {\n        // this is for redirect the login page if the user is not valid \n        let username = sessionStorage.getItem('username')\n        if (username === null || username === '') {\n            navigate('/login')\n        };\n\n        getUserList();\n\n    }, []);\n    const getUserList = () => {\n        fetch(\"http://localhost:3000/user\").then((res) => { // here we need to call post method by sending username and also call get method \n            return res.json();\n        }).then((resp) => {\n            console.log(resp)\n            loginResponse(resp)\n            console.log(\"loginResponse\", responseVal)\n            // if (Object.keys(resp).length === 0) {\n            //     toast.warn(\"Please enter valid user\")\n            // }\n            // else {\n            //     if (resp.password === password) { // the second password from usestate\n            //         toast.success(\"Success\")\n            //         sessionStorage.setItem(\"username\", username)\n            //         navigate('/', { state: { loginResponse } })\n            //     } else {\n            //         toast.error(\"Please enter valid credentials\")\n            //     }\n            // }\n        }).catch((err) => {\n            toast.error(err.message)\n        })\n    }\n    // const loginResponse = location.state && location.state.loginResponse;\n    // console.log(loginResponse, \"login_resssssss\")\n    return (\n        <div>\n            <div className=\"header\">\n                <Link to={'/'}>Home</Link>\n                <Link to={'/login'}>Logout</Link>\n            </div>\n            <h2>Welcome to </h2>\n            <div className=\"Table-Data\">\n                {/* <div className=\"float-end mb-3 mr-5\">\n                    <Link className=\"btn btn-primary\" to={'/register'}>Add User</Link>\n                </div> */}\n                {/* <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <td>Name</td>\n                            <td>Email</td>\n                            <td>Address</td>\n                            <td>Country</td>\n                            <td>Gender</td>\n                            <td>Phone</td>\n                            <td>Action</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            responseVal && responseVal.map((item) => (\n                                <tr key={item.id}>\n                                    <td>{item.name}</td>\n                                    <td>{item.email}</td>\n                                    <td>{item.address}</td>\n                                    <td>{item.country}</td>\n                                    <td>{item.gender}</td>\n                                    <td>{item.phone}</td>\n                                    <td className=\"d-flex align-items-center justify-content-center\">\n                                        <button className=\"btn btn-info mx-3\" >Edit</button>\n                                        <button className=\"btn btn-danger\">Delete</button>\n                                    </td>\n                                </tr>\n                            ))\n                        }\n\n                    </tbody>\n                </table> */}\n            </div>\n        </div>\n    );\n}\n\nexport default Home;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,IAAI,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B;EACAH,SAAS,CAAC,MAAM;IACZ;IACA,IAAIc,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAIF,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,EAAE,EAAE;MACtCD,QAAQ,CAAC,QAAQ,CAAC;IACtB;IAAC;IAEDI,WAAW,CAAC,CAAC;EAEjB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAAE;MAChD,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBV,aAAa,CAACU,IAAI,CAAC;MACnBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEb,WAAW,CAAC;MACzC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC,CAACc,KAAK,CAAEC,GAAG,IAAK;MACdtB,KAAK,CAACuB,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC;EACD;EACA;EACA,oBACIrB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAKuB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBtB,OAAA,CAACL,IAAI;QAAC6B,EAAE,EAAE,GAAI;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1B5B,OAAA,CAACL,IAAI;QAAC6B,EAAE,EAAE,QAAS;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACN5B,OAAA;MAAAsB,QAAA,EAAI;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB5B,OAAA;MAAKuB,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoCtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAzB,EAAA,CArFKF,IAAI;EAAA,QAEWL,WAAW;AAAA;AAAAiC,EAAA,GAF1B5B,IAAI;AAuFV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}